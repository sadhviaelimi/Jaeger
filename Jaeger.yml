apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: '1'
    deployment.kubernetes.io/max-replicas: '1'
    deployment.kubernetes.io/revision: '1'
  creationTimestamp: '2018-11-16T19:03:33Z'
  generation: 1
  labels:
    app: jaeger
    jaeger-infra: jaeger-pod
    pod-template-hash: '3398591773'
  name: jaeger-77fd9f5cc7
  namespace: monitoring
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: jaeger
      uid: 501cd4fb-e9d2-11e8-b9b6-0a2d33d572d2
  resourceVersion: '2447556'
  selfLink: /apis/apps/v1/namespaces/monitoring/replicasets/jaeger-77fd9f5cc7
  uid: 501de378-e9d2-11e8-b9b6-0a2d33d572d2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      jaeger-infra: jaeger-pod
      pod-template-hash: '3398591773'
  template:
    metadata:
      annotations:
        prometheus.io/port: '16686'
        prometheus.io/scrape: 'true'
      creationTimestamp: null
      labels:
        app: jaeger
        jaeger-infra: jaeger-pod
        pod-template-hash: '3398591773'
    spec:
      containers:
        - env:
            - name: COLLECTOR_ZIPKIN_HTTP_PORT
              value: '9411'
          image: 'jaegertracing/all-in-one:latest'
          imagePullPolicy: Always
          name: jaeger
          ports:
            - containerPort: 5775
              protocol: UDP
            - containerPort: 6831
              protocol: UDP
            - containerPort: 6832
              protocol: UDP
            - containerPort: 16686
              protocol: TCP
            - containerPort: 9411
              protocol: TCP
            - containerPort: 5778
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 14269
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  fullyLabeledReplicas: 1
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
